package com.greenfoxacademy.vocseikatimasterwork.models.dtos.studentdtos;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.greenfoxacademy.vocseikatimasterwork.models.Gender;
import com.greenfoxacademy.vocseikatimasterwork.models.entities.Student;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.LocalDateTime;
import lombok.AllArgsConstructor;
import lombok.Data;

@AllArgsConstructor
@Data
@ApiModel(discriminator = "Data of a student.")
public class StudentDto {

  @ApiModelProperty(value = "Unique ID of the student, autogenerated by the database.")
  private Long id;
  @ApiModelProperty(value = "First name of the student.")
  private String firstName;
  @ApiModelProperty(value = "Last name of the student.")
  private String lastName;
  @ApiModelProperty(value = "Gender of the student.", allowableValues = "MALE, FEMALE")
  private Gender gender;
  @ApiModelProperty(value = "Date if birth of the student.")
  private LocalDate dateOfBirth;
  @ApiModelProperty(value = "Mailing address of the student.")
  private String mailingAddress;
  @ApiModelProperty(value = "Billing address of the student.")
  private String billingAddress;
  @ApiModelProperty(value = "Email address of the student.")
  private String email;
  @ApiModelProperty(value = "Phone number of the student.")
  private String phoneNumber;
  @ApiModelProperty(value = "Level of knowledge of the student.")
  private String level;
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm")
  private LocalDateTime createdAt;
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm")
  private LocalDateTime lastUpdatedAt;

  public static StudentDto convertToStudentDto(Student student) {
    return new StudentDto(student.getId(), student.getFirstName(), student.getLastName(),
        student.getGender(), student.getDateOfBirth(), student.getMailingAddress(),
        student.getBillingAddress(), student.getEmail(), student.getPhoneNumber(),
        student.getLevel(), student.getCreatedAt(), student.getLastUpdatedAt());
  }

}
